// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "79b97d2c-8c8b-4909-baf9-cd7f90b02dec";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onCoChange();
void onCo2Change();
void onHumidityChange();
void onLpgChange();
void onMotorASpeedChange();
void onMotorBSpeedChange();
void onNh3Change();
void onSmokeChange();
void onLightChange();
void onFlameChange();
void onBuzzerChange();
void onLedChange();
void onMotorAStateChange();
void onMotorBStateChange();
void onTemperatureChange();

float co;
float co2;
float humidity;
float lpg;
float motorASpeed;
float motorBSpeed;
float nh3;
float smoke;
CloudIlluminance light;
int Flame;
bool buzzer;
bool led;
bool motorAState;
bool motorBState;
CloudTemperature temperature;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(co, READWRITE, ON_CHANGE, onCoChange);
  ArduinoCloud.addProperty(co2, READWRITE, ON_CHANGE, onCo2Change);
  ArduinoCloud.addProperty(humidity, READWRITE, ON_CHANGE, onHumidityChange);
  ArduinoCloud.addProperty(lpg, READWRITE, ON_CHANGE, onLpgChange);
  ArduinoCloud.addProperty(motorASpeed, READWRITE, ON_CHANGE, onMotorASpeedChange);
  ArduinoCloud.addProperty(motorBSpeed, READWRITE, ON_CHANGE, onMotorBSpeedChange);
  ArduinoCloud.addProperty(nh3, READWRITE, ON_CHANGE, onNh3Change);
  ArduinoCloud.addProperty(smoke, READWRITE, ON_CHANGE, onSmokeChange);
  ArduinoCloud.addProperty(light, READWRITE, ON_CHANGE, onLightChange);
  ArduinoCloud.addProperty(Flame, READWRITE, ON_CHANGE, onFlameChange);
  ArduinoCloud.addProperty(buzzer, READWRITE, ON_CHANGE, onBuzzerChange);
  ArduinoCloud.addProperty(led, READWRITE, ON_CHANGE, onLedChange);
  ArduinoCloud.addProperty(motorAState, READWRITE, ON_CHANGE, onMotorAStateChange);
  ArduinoCloud.addProperty(motorBState, READWRITE, ON_CHANGE, onMotorBStateChange);
  ArduinoCloud.addProperty(temperature, READWRITE, ON_CHANGE, onTemperatureChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
